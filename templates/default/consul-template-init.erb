#!/bin/sh
### BEGIN INIT INFO
# Provides:          consul-template
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Consul Template Service Discovery Platform
# Description:       Consul Template convenient way to populate values from
#                    Consul into the filesystem using the consul-template daemon.
### END INIT INFO

CMD="<%= @command %> <%= @options %>"
NAME="consul-template"

USER=root
DAEMON="<%= @command %>"

LOGFILE="/var/log/$NAME.log"

SCRIPTNAME=/etc/init.d/${NAME}
PIDFILE="/var/run/$NAME.pid"
LOCKFILE="/var/run/lock/${NAME}"
SHUTDOWN_TIMEOUT=1

AGENT_OPTS="<%= @options %>"

. /lib/lsb/init-functions

start() {
        echo "Starting $NAME: "
        daemonize -c $WORKDIR -u $USER -p $PIDFILE -l $LOCKFILE -o $LOGFILE -e $LOGFILE $DAEMON $AGENT_OPTS
        log_end_msg $?
}

stop(){
        [ -e "$PIDFILE" ] && [ ! -z "$(cat $PIDFILE)" ] && test -d "/proc/$(cat $PIDFILE)" && kill $(cat $PIDFILE)
        log_daemon_msg "Stopping $NAME: "
        flock --exclusive --timeout $SHUTDOWN_TIMEOUT $LOCKFILE --command "echo -n"
        if [ $? -ne 0 ]; then
                kill -SIGTERM $(cat $PIDFILE)
                flock --exclusive --timeout 1 $LOCKFILE --command "echo -n"
        fi
        log_end_msg $?
}
reload(){
        [ -e "$PIDFILE" ] && [ ! -z "$(cat $PIDFILE)" ] && test -d "/proc/$(cat $PIDFILE)" && kill -SIGHUP $(cat $PIDFILE)
        sleep 1
        log_daemon_msg "reloading $NAME: "
        log_end_msg $?
}
status(){
    [ -e "$PIDFILE" ] && [ ! -z "$(cat $PIDFILE)" ] && test -d "/proc/$(cat $PIDFILE)" && echo "$NAME is running"
    if [ $? -ne 0 ]; then
        echo "$NAME is stopped"
        exit 1
    fi
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        reload)
                reload
                ;;
        status)
                status
                ;;
        restart)
                stop
                sleep 0.1
                start
                ;;
        *)
                echo "Usage: $SCRIPTNAME {start|stop|restart|reload}" >&2
                exit 1
                ;;
esac

exit 0